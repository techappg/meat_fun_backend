<!DOCTYPE html>
<html lang="en">
<head>
  <meta http-equiv="content-type" content="text/html; charset=utf-8">
  <meta name="robots" content="NONE,NOARCHIVE">
  <title>AssertionError
          at /product/Transaction-Callback/</title>
  <style type="text/css">
    html * { padding:0; margin:0; }
    body * { padding:10px 20px; }
    body * * { padding:0; }
    body { font:small sans-serif; background-color:#fff; color:#000; }
    body>div { border-bottom:1px solid #ddd; }
    h1 { font-weight:normal; }
    h2 { margin-bottom:.8em; }
    h3 { margin:1em 0 .5em 0; }
    h4 { margin:0 0 .5em 0; font-weight: normal; }
    code, pre { font-size: 100%; white-space: pre-wrap; }
    table { border:1px solid #ccc; border-collapse: collapse; width:100%; background:white; }
    tbody td, tbody th { vertical-align:top; padding:2px 3px; }
    thead th {
      padding:1px 6px 1px 3px; background:#fefefe; text-align:left;
      font-weight:normal; font-size:11px; border:1px solid #ddd;
    }
    tbody th { width:12em; text-align:right; color:#666; padding-right:.5em; }
    table.vars { margin:5px 0 2px 40px; }
    table.vars td, table.req td { font-family:monospace; }
    table td.code { width:100%; }
    table td.code pre { overflow:hidden; }
    table.source th { color:#666; }
    table.source td { font-family:monospace; white-space:pre; border-bottom:1px solid #eee; }
    ul.traceback { list-style-type:none; color: #222; }
    ul.traceback li.frame { padding-bottom:1em; color:#4f4f4f; }
    ul.traceback li.user { background-color:#e0e0e0; color:#000 }
    div.context { padding:10px 0; overflow:hidden; }
    div.context ol { padding-left:30px; margin:0 10px; list-style-position: inside; }
    div.context ol li { font-family:monospace; white-space:pre; color:#777; cursor:pointer; padding-left: 2px; }
    div.context ol li pre { display:inline; }
    div.context ol.context-line li { color:#464646; background-color:#dfdfdf; padding: 3px 2px; }
    div.context ol.context-line li span { position:absolute; right:32px; }
    .user div.context ol.context-line li { background-color:#bbb; color:#000; }
    .user div.context ol li { color:#666; }
    div.commands { margin-left: 40px; }
    div.commands a { color:#555; text-decoration:none; }
    .user div.commands a { color: black; }
    #summary { background: #ffc; }
    #summary h2 { font-weight: normal; color: #666; }
    #explanation { background:#eee; }
    #template, #template-not-exist { background:#f6f6f6; }
    #template-not-exist ul { margin: 0 0 10px 20px; }
    #template-not-exist .postmortem-section { margin-bottom: 3px; }
    #unicode-hint { background:#eee; }
    #traceback { background:#eee; }
    #requestinfo { background:#f6f6f6; padding-left:120px; }
    #summary table { border:none; background:transparent; }
    #requestinfo h2, #requestinfo h3 { position:relative; margin-left:-100px; }
    #requestinfo h3 { margin-bottom:-1em; }
    .error { background: #ffc; }
    .specific { color:#cc3300; font-weight:bold; }
    h2 span.commands { font-size:.7em; font-weight:normal; }
    span.commands a:link {color:#5E5694;}
    pre.exception_value { font-family: sans-serif; color: #575757; font-size: 1.5em; margin: 10px 0 10px 0; }
    .append-bottom { margin-bottom: 10px; }
    .fname { user-select: all; }
  </style>
  
  <script>
    function hideAll(elems) {
      for (var e = 0; e < elems.length; e++) {
        elems[e].style.display = 'none';
      }
    }
    window.onload = function() {
      hideAll(document.querySelectorAll('table.vars'));
      hideAll(document.querySelectorAll('ol.pre-context'));
      hideAll(document.querySelectorAll('ol.post-context'));
      hideAll(document.querySelectorAll('div.pastebin'));
    }
    function toggle() {
      for (var i = 0; i < arguments.length; i++) {
        var e = document.getElementById(arguments[i]);
        if (e) {
          e.style.display = e.style.display == 'none' ? 'block': 'none';
        }
      }
      return false;
    }
    function varToggle(link, id) {
      toggle('v' + id);
      var s = link.getElementsByTagName('span')[0];
      var uarr = String.fromCharCode(0x25b6);
      var darr = String.fromCharCode(0x25bc);
      s.textContent = s.textContent == uarr ? darr : uarr;
      return false;
    }
    function switchPastebinFriendly(link) {
      s1 = "Switch to copy-and-paste view";
      s2 = "Switch back to interactive view";
      link.textContent = link.textContent.trim() == s1 ? s2: s1;
      toggle('browserTraceback', 'pastebinTraceback');
      return false;
    }
  </script>
  
</head>
<body>
<div id="summary">
  <h1>AssertionError
       at /product/Transaction-Callback/</h1>
  <pre class="exception_value">You cannot call `.save()` after accessing `serializer.data`.If you need to access data before committing to the database then inspect &#x27;serializer.validated_data&#x27; instead. </pre>
  <table class="meta">

    <tr>
      <th>Request Method:</th>
      <td>POST</td>
    </tr>
    <tr>
      <th>Request URL:</th>
      <td>https://api.meat.fun/product/Transaction-Callback/</td>
    </tr>

    <tr>
      <th>Django Version:</th>
      <td>3.1</td>
    </tr>

    <tr>
      <th>Exception Type:</th>
      <td>AssertionError</td>
    </tr>


    <tr>
      <th>Exception Value:</th>
      <td><pre>You cannot call `.save()` after accessing `serializer.data`.If you need to access data before committing to the database then inspect &#x27;serializer.validated_data&#x27; instead. </pre></td>
    </tr>


    <tr>
      <th>Exception Location:</th>
      <td><span class="fname">/home/adminmeatfun/backend_roc/lib/python3.8/site-packages/rest_framework/serializers.py</span>, line 195, in save</td>
    </tr>

    <tr>
      <th>Python Executable:</th>
      <td>/home/adminmeatfun/backend_roc/bin/python</td>
    </tr>
    <tr>
      <th>Python Version:</th>
      <td>3.8.6</td>
    </tr>
    <tr>
      <th>Python Path:</th>
      <td><pre>[&#x27;/home/adminmeatfun/backend_roc/bin&#x27;,
 &#x27;/home/adminmeatfun/backend_roc&#x27;,
 &#x27;/usr/local/lib/python38.zip&#x27;,
 &#x27;/usr/local/lib/python3.8&#x27;,
 &#x27;/usr/local/lib/python3.8/lib-dynload&#x27;,
 &#x27;/home/adminmeatfun/backend_roc/lib/python3.8/site-packages&#x27;]</pre></td>
    </tr>
    <tr>
      <th>Server time:</th>
      <td>Mon, 07 Dec 2020 06:25:23 +0000</td>
    </tr>
  </table>
</div>




<div id="traceback">
  <h2>Traceback <span class="commands"><a href="#" onclick="return switchPastebinFriendly(this);">
    Switch to copy-and-paste view</a></span>
  </h2>
  <div id="browserTraceback">
    <ul class="traceback">
      
        
        <li class="frame django">
          <code class="fname">/home/adminmeatfun/backend_roc/lib/python3.8/site-packages/django/core/handlers/exception.py</code>, line 47, in inner

          
            <div class="context" id="c140016011049216">
              
                <ol start="40" class="pre-context" id="pre140016011049216">
                
                  <li onclick="toggle('pre140016011049216', 'post140016011049216')"><pre>                response = await sync_to_async(response_for_exception)(request, exc)</pre></li>
                
                  <li onclick="toggle('pre140016011049216', 'post140016011049216')"><pre>            return response</pre></li>
                
                  <li onclick="toggle('pre140016011049216', 'post140016011049216')"><pre>        return inner</pre></li>
                
                  <li onclick="toggle('pre140016011049216', 'post140016011049216')"><pre>    else:</pre></li>
                
                  <li onclick="toggle('pre140016011049216', 'post140016011049216')"><pre>        @wraps(get_response)</pre></li>
                
                  <li onclick="toggle('pre140016011049216', 'post140016011049216')"><pre>        def inner(request):</pre></li>
                
                  <li onclick="toggle('pre140016011049216', 'post140016011049216')"><pre>            try:</pre></li>
                
                </ol>
              
              <ol start="47" class="context-line">
                <li onclick="toggle('pre140016011049216', 'post140016011049216')"><pre>                response = get_response(request)</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='48' class="post-context" id="post140016011049216">
                  
                  <li onclick="toggle('pre140016011049216', 'post140016011049216')"><pre>            except Exception as exc:</pre></li>
                  
                  <li onclick="toggle('pre140016011049216', 'post140016011049216')"><pre>                response = response_for_exception(request, exc)</pre></li>
                  
                  <li onclick="toggle('pre140016011049216', 'post140016011049216')"><pre>            return response</pre></li>
                  
                  <li onclick="toggle('pre140016011049216', 'post140016011049216')"><pre>        return inner</pre></li>
                  
                  <li onclick="toggle('pre140016011049216', 'post140016011049216')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140016011049216', 'post140016011049216')"><pre></pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140016011049216')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140016011049216">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>exc</td>
                    <td class="code"><pre>AssertionError(&quot;You cannot call `.save()` after accessing `serializer.data`.If you need to access data before committing to the database then inspect &#x27;serializer.validated_data&#x27; instead. &quot;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>get_response</td>
                    <td class="code"><pre>&lt;bound method BaseHandler._get_response of &lt;django.core.handlers.wsgi.WSGIHandler object at 0x7f5805525f10&gt;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;WSGIRequest: POST &#x27;/product/Transaction-Callback/&#x27;&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame django">
          <code class="fname">/home/adminmeatfun/backend_roc/lib/python3.8/site-packages/django/core/handlers/base.py</code>, line 179, in _get_response

          
            <div class="context" id="c140016011049472">
              
                <ol start="172" class="pre-context" id="pre140016011049472">
                
                  <li onclick="toggle('pre140016011049472', 'post140016011049472')"><pre></pre></li>
                
                  <li onclick="toggle('pre140016011049472', 'post140016011049472')"><pre>        if response is None:</pre></li>
                
                  <li onclick="toggle('pre140016011049472', 'post140016011049472')"><pre>            wrapped_callback = self.make_view_atomic(callback)</pre></li>
                
                  <li onclick="toggle('pre140016011049472', 'post140016011049472')"><pre>            # If it is an asynchronous view, run it in a subthread.</pre></li>
                
                  <li onclick="toggle('pre140016011049472', 'post140016011049472')"><pre>            if asyncio.iscoroutinefunction(wrapped_callback):</pre></li>
                
                  <li onclick="toggle('pre140016011049472', 'post140016011049472')"><pre>                wrapped_callback = async_to_sync(wrapped_callback)</pre></li>
                
                  <li onclick="toggle('pre140016011049472', 'post140016011049472')"><pre>            try:</pre></li>
                
                </ol>
              
              <ol start="179" class="context-line">
                <li onclick="toggle('pre140016011049472', 'post140016011049472')"><pre>                response = wrapped_callback(request, *callback_args, **callback_kwargs)</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='180' class="post-context" id="post140016011049472">
                  
                  <li onclick="toggle('pre140016011049472', 'post140016011049472')"><pre>            except Exception as e:</pre></li>
                  
                  <li onclick="toggle('pre140016011049472', 'post140016011049472')"><pre>                response = self.process_exception_by_middleware(e, request)</pre></li>
                  
                  <li onclick="toggle('pre140016011049472', 'post140016011049472')"><pre>                if response is None:</pre></li>
                  
                  <li onclick="toggle('pre140016011049472', 'post140016011049472')"><pre>                    raise</pre></li>
                  
                  <li onclick="toggle('pre140016011049472', 'post140016011049472')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140016011049472', 'post140016011049472')"><pre>        # Complain if the view returned None (a common error).</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140016011049472')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140016011049472">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>callback</td>
                    <td class="code"><pre>&lt;function Transaction_views at 0x7f5804abb280&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>callback_args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
                  <tr>
                    <td>callback_kwargs</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>middleware_method</td>
                    <td class="code"><pre>&lt;bound method CsrfViewMiddleware.process_view of &lt;django.middleware.csrf.CsrfViewMiddleware object at 0x7f5805236d30&gt;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;WSGIRequest: POST &#x27;/product/Transaction-Callback/&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>response</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.core.handlers.wsgi.WSGIHandler object at 0x7f5805525f10&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>wrapped_callback</td>
                    <td class="code"><pre>&lt;function Transaction_views at 0x7f5804abb280&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame django">
          <code class="fname">/home/adminmeatfun/backend_roc/lib/python3.8/site-packages/django/views/decorators/csrf.py</code>, line 54, in wrapped_view

          
            <div class="context" id="c140016011048320">
              
                <ol start="47" class="pre-context" id="pre140016011048320">
                
                  <li onclick="toggle('pre140016011048320', 'post140016011048320')"><pre></pre></li>
                
                  <li onclick="toggle('pre140016011048320', 'post140016011048320')"><pre></pre></li>
                
                  <li onclick="toggle('pre140016011048320', 'post140016011048320')"><pre>def csrf_exempt(view_func):</pre></li>
                
                  <li onclick="toggle('pre140016011048320', 'post140016011048320')"><pre>    &quot;&quot;&quot;Mark a view function as being exempt from the CSRF view protection.&quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre140016011048320', 'post140016011048320')"><pre>    # view_func.csrf_exempt = True would also work, but decorators are nicer</pre></li>
                
                  <li onclick="toggle('pre140016011048320', 'post140016011048320')"><pre>    # if they don&#x27;t have side effects, so return a new function.</pre></li>
                
                  <li onclick="toggle('pre140016011048320', 'post140016011048320')"><pre>    def wrapped_view(*args, **kwargs):</pre></li>
                
                </ol>
              
              <ol start="54" class="context-line">
                <li onclick="toggle('pre140016011048320', 'post140016011048320')"><pre>        return view_func(*args, **kwargs)</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='55' class="post-context" id="post140016011048320">
                  
                  <li onclick="toggle('pre140016011048320', 'post140016011048320')"><pre>    wrapped_view.csrf_exempt = True</pre></li>
                  
                  <li onclick="toggle('pre140016011048320', 'post140016011048320')"><pre>    return wraps(view_func)(wrapped_view)</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140016011048320')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140016011048320">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>args</td>
                    <td class="code"><pre>(&lt;WSGIRequest: POST &#x27;/product/Transaction-Callback/&#x27;&gt;,)</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>view_func</td>
                    <td class="code"><pre>&lt;function Transaction_views at 0x7f5804abb1f0&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame django">
          <code class="fname">/home/adminmeatfun/backend_roc/lib/python3.8/site-packages/django/views/generic/base.py</code>, line 73, in view

          
            <div class="context" id="c140016011047104">
              
                <ol start="66" class="pre-context" id="pre140016011047104">
                
                  <li onclick="toggle('pre140016011047104', 'post140016011047104')"><pre>            self = cls(**initkwargs)</pre></li>
                
                  <li onclick="toggle('pre140016011047104', 'post140016011047104')"><pre>            self.setup(request, *args, **kwargs)</pre></li>
                
                  <li onclick="toggle('pre140016011047104', 'post140016011047104')"><pre>            if not hasattr(self, &#x27;request&#x27;):</pre></li>
                
                  <li onclick="toggle('pre140016011047104', 'post140016011047104')"><pre>                raise AttributeError(</pre></li>
                
                  <li onclick="toggle('pre140016011047104', 'post140016011047104')"><pre>                    &quot;%s instance has no &#x27;request&#x27; attribute. Did you override &quot;</pre></li>
                
                  <li onclick="toggle('pre140016011047104', 'post140016011047104')"><pre>                    &quot;setup() and forget to call super()?&quot; % cls.__name__</pre></li>
                
                  <li onclick="toggle('pre140016011047104', 'post140016011047104')"><pre>                )</pre></li>
                
                </ol>
              
              <ol start="73" class="context-line">
                <li onclick="toggle('pre140016011047104', 'post140016011047104')"><pre>            return self.dispatch(request, *args, **kwargs)</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='74' class="post-context" id="post140016011047104">
                  
                  <li onclick="toggle('pre140016011047104', 'post140016011047104')"><pre>        view.view_class = cls</pre></li>
                  
                  <li onclick="toggle('pre140016011047104', 'post140016011047104')"><pre>        view.view_initkwargs = initkwargs</pre></li>
                  
                  <li onclick="toggle('pre140016011047104', 'post140016011047104')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140016011047104', 'post140016011047104')"><pre>        # take name and docstring from class</pre></li>
                  
                  <li onclick="toggle('pre140016011047104', 'post140016011047104')"><pre>        update_wrapper(view, cls, updated=())</pre></li>
                  
                  <li onclick="toggle('pre140016011047104', 'post140016011047104')"><pre></pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140016011047104')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140016011047104">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
                  <tr>
                    <td>cls</td>
                    <td class="code"><pre>&lt;class &#x27;product.api.Order_api.Transaction_views&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>initkwargs</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;WSGIRequest: POST &#x27;/product/Transaction-Callback/&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;product.api.Order_api.Transaction_views object at 0x7f58049c0790&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code class="fname">/home/adminmeatfun/backend_roc/lib/python3.8/site-packages/rest_framework/views.py</code>, line 505, in dispatch

          
            <div class="context" id="c140016011050240">
              
                <ol start="498" class="pre-context" id="pre140016011050240">
                
                  <li onclick="toggle('pre140016011050240', 'post140016011050240')"><pre>                                  self.http_method_not_allowed)</pre></li>
                
                  <li onclick="toggle('pre140016011050240', 'post140016011050240')"><pre>            else:</pre></li>
                
                  <li onclick="toggle('pre140016011050240', 'post140016011050240')"><pre>                handler = self.http_method_not_allowed</pre></li>
                
                  <li onclick="toggle('pre140016011050240', 'post140016011050240')"><pre></pre></li>
                
                  <li onclick="toggle('pre140016011050240', 'post140016011050240')"><pre>            response = handler(request, *args, **kwargs)</pre></li>
                
                  <li onclick="toggle('pre140016011050240', 'post140016011050240')"><pre></pre></li>
                
                  <li onclick="toggle('pre140016011050240', 'post140016011050240')"><pre>        except Exception as exc:</pre></li>
                
                </ol>
              
              <ol start="505" class="context-line">
                <li onclick="toggle('pre140016011050240', 'post140016011050240')"><pre>            response = self.handle_exception(exc)</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='506' class="post-context" id="post140016011050240">
                  
                  <li onclick="toggle('pre140016011050240', 'post140016011050240')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140016011050240', 'post140016011050240')"><pre>        self.response = self.finalize_response(request, response, *args, **kwargs)</pre></li>
                  
                  <li onclick="toggle('pre140016011050240', 'post140016011050240')"><pre>        return self.response</pre></li>
                  
                  <li onclick="toggle('pre140016011050240', 'post140016011050240')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140016011050240', 'post140016011050240')"><pre>    def options(self, request, *args, **kwargs):</pre></li>
                  
                  <li onclick="toggle('pre140016011050240', 'post140016011050240')"><pre>        &quot;&quot;&quot;</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140016011050240')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140016011050240">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
                  <tr>
                    <td>handler</td>
                    <td class="code"><pre>&lt;bound method Transaction_views.post of &lt;product.api.Order_api.Transaction_views object at 0x7f58049c0790&gt;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;rest_framework.request.Request object at 0x7f58049c0c70&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;product.api.Order_api.Transaction_views object at 0x7f58049c0790&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code class="fname">/home/adminmeatfun/backend_roc/lib/python3.8/site-packages/rest_framework/views.py</code>, line 465, in handle_exception

          
            <div class="context" id="c140016011048192">
              
                <ol start="458" class="pre-context" id="pre140016011048192">
                
                  <li onclick="toggle('pre140016011048192', 'post140016011048192')"><pre></pre></li>
                
                  <li onclick="toggle('pre140016011048192', 'post140016011048192')"><pre>        exception_handler = self.get_exception_handler()</pre></li>
                
                  <li onclick="toggle('pre140016011048192', 'post140016011048192')"><pre></pre></li>
                
                  <li onclick="toggle('pre140016011048192', 'post140016011048192')"><pre>        context = self.get_exception_handler_context()</pre></li>
                
                  <li onclick="toggle('pre140016011048192', 'post140016011048192')"><pre>        response = exception_handler(exc, context)</pre></li>
                
                  <li onclick="toggle('pre140016011048192', 'post140016011048192')"><pre></pre></li>
                
                  <li onclick="toggle('pre140016011048192', 'post140016011048192')"><pre>        if response is None:</pre></li>
                
                </ol>
              
              <ol start="465" class="context-line">
                <li onclick="toggle('pre140016011048192', 'post140016011048192')"><pre>            self.raise_uncaught_exception(exc)</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='466' class="post-context" id="post140016011048192">
                  
                  <li onclick="toggle('pre140016011048192', 'post140016011048192')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140016011048192', 'post140016011048192')"><pre>        response.exception = True</pre></li>
                  
                  <li onclick="toggle('pre140016011048192', 'post140016011048192')"><pre>        return response</pre></li>
                  
                  <li onclick="toggle('pre140016011048192', 'post140016011048192')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140016011048192', 'post140016011048192')"><pre>    def raise_uncaught_exception(self, exc):</pre></li>
                  
                  <li onclick="toggle('pre140016011048192', 'post140016011048192')"><pre>        if settings.DEBUG:</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140016011048192')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140016011048192">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>context</td>
                    <td class="code"><pre>{&#x27;args&#x27;: (),
 &#x27;kwargs&#x27;: {},
 &#x27;request&#x27;: &lt;rest_framework.request.Request object at 0x7f58049c0c70&gt;,
 &#x27;view&#x27;: &lt;product.api.Order_api.Transaction_views object at 0x7f58049c0790&gt;}</pre></td>
                  </tr>
                
                  <tr>
                    <td>exc</td>
                    <td class="code"><pre>AssertionError(&quot;You cannot call `.save()` after accessing `serializer.data`.If you need to access data before committing to the database then inspect &#x27;serializer.validated_data&#x27; instead. &quot;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>exception_handler</td>
                    <td class="code"><pre>&lt;function custom_exception_handler at 0x7f5804cb0af0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>response</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;product.api.Order_api.Transaction_views object at 0x7f58049c0790&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code class="fname">/home/adminmeatfun/backend_roc/lib/python3.8/site-packages/rest_framework/views.py</code>, line 476, in raise_uncaught_exception

          
            <div class="context" id="c140016011048448">
              
                <ol start="469" class="pre-context" id="pre140016011048448">
                
                  <li onclick="toggle('pre140016011048448', 'post140016011048448')"><pre></pre></li>
                
                  <li onclick="toggle('pre140016011048448', 'post140016011048448')"><pre>    def raise_uncaught_exception(self, exc):</pre></li>
                
                  <li onclick="toggle('pre140016011048448', 'post140016011048448')"><pre>        if settings.DEBUG:</pre></li>
                
                  <li onclick="toggle('pre140016011048448', 'post140016011048448')"><pre>            request = self.request</pre></li>
                
                  <li onclick="toggle('pre140016011048448', 'post140016011048448')"><pre>            renderer_format = getattr(request.accepted_renderer, &#x27;format&#x27;)</pre></li>
                
                  <li onclick="toggle('pre140016011048448', 'post140016011048448')"><pre>            use_plaintext_traceback = renderer_format not in (&#x27;html&#x27;, &#x27;api&#x27;, &#x27;admin&#x27;)</pre></li>
                
                  <li onclick="toggle('pre140016011048448', 'post140016011048448')"><pre>            request.force_plaintext_errors(use_plaintext_traceback)</pre></li>
                
                </ol>
              
              <ol start="476" class="context-line">
                <li onclick="toggle('pre140016011048448', 'post140016011048448')"><pre>        raise exc</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='477' class="post-context" id="post140016011048448">
                  
                  <li onclick="toggle('pre140016011048448', 'post140016011048448')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140016011048448', 'post140016011048448')"><pre>    # Note: Views are made CSRF exempt from within `as_view` as to prevent</pre></li>
                  
                  <li onclick="toggle('pre140016011048448', 'post140016011048448')"><pre>    # accidental removal of this exemption in cases where `dispatch` needs to</pre></li>
                  
                  <li onclick="toggle('pre140016011048448', 'post140016011048448')"><pre>    # be overridden.</pre></li>
                  
                  <li onclick="toggle('pre140016011048448', 'post140016011048448')"><pre>    def dispatch(self, request, *args, **kwargs):</pre></li>
                  
                  <li onclick="toggle('pre140016011048448', 'post140016011048448')"><pre>        &quot;&quot;&quot;</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140016011048448')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140016011048448">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>exc</td>
                    <td class="code"><pre>AssertionError(&quot;You cannot call `.save()` after accessing `serializer.data`.If you need to access data before committing to the database then inspect &#x27;serializer.validated_data&#x27; instead. &quot;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>renderer_format</td>
                    <td class="code"><pre>&#x27;json&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;rest_framework.request.Request object at 0x7f58049c0c70&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;product.api.Order_api.Transaction_views object at 0x7f58049c0790&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>use_plaintext_traceback</td>
                    <td class="code"><pre>True</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code class="fname">/home/adminmeatfun/backend_roc/lib/python3.8/site-packages/rest_framework/views.py</code>, line 502, in dispatch

          
            <div class="context" id="c140016011047872">
              
                <ol start="495" class="pre-context" id="pre140016011047872">
                
                  <li onclick="toggle('pre140016011047872', 'post140016011047872')"><pre>            # Get the appropriate handler method</pre></li>
                
                  <li onclick="toggle('pre140016011047872', 'post140016011047872')"><pre>            if request.method.lower() in self.http_method_names:</pre></li>
                
                  <li onclick="toggle('pre140016011047872', 'post140016011047872')"><pre>                handler = getattr(self, request.method.lower(),</pre></li>
                
                  <li onclick="toggle('pre140016011047872', 'post140016011047872')"><pre>                                  self.http_method_not_allowed)</pre></li>
                
                  <li onclick="toggle('pre140016011047872', 'post140016011047872')"><pre>            else:</pre></li>
                
                  <li onclick="toggle('pre140016011047872', 'post140016011047872')"><pre>                handler = self.http_method_not_allowed</pre></li>
                
                  <li onclick="toggle('pre140016011047872', 'post140016011047872')"><pre></pre></li>
                
                </ol>
              
              <ol start="502" class="context-line">
                <li onclick="toggle('pre140016011047872', 'post140016011047872')"><pre>            response = handler(request, *args, **kwargs)</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='503' class="post-context" id="post140016011047872">
                  
                  <li onclick="toggle('pre140016011047872', 'post140016011047872')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140016011047872', 'post140016011047872')"><pre>        except Exception as exc:</pre></li>
                  
                  <li onclick="toggle('pre140016011047872', 'post140016011047872')"><pre>            response = self.handle_exception(exc)</pre></li>
                  
                  <li onclick="toggle('pre140016011047872', 'post140016011047872')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140016011047872', 'post140016011047872')"><pre>        self.response = self.finalize_response(request, response, *args, **kwargs)</pre></li>
                  
                  <li onclick="toggle('pre140016011047872', 'post140016011047872')"><pre>        return self.response</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140016011047872')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140016011047872">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
                  <tr>
                    <td>handler</td>
                    <td class="code"><pre>&lt;bound method Transaction_views.post of &lt;product.api.Order_api.Transaction_views object at 0x7f58049c0790&gt;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;rest_framework.request.Request object at 0x7f58049c0c70&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;product.api.Order_api.Transaction_views object at 0x7f58049c0790&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code class="fname">/home/adminmeatfun/backend_roc/product/api/Order_api.py</code>, line 120, in post

          
            <div class="context" id="c140016011047616">
              
                <ol start="113" class="pre-context" id="pre140016011047616">
                
                  <li onclick="toggle('pre140016011047616', 'post140016011047616')"><pre></pre></li>
                
                  <li onclick="toggle('pre140016011047616', 'post140016011047616')"><pre>    def post(self, request, format=None):</pre></li>
                
                  <li onclick="toggle('pre140016011047616', 'post140016011047616')"><pre>        serializer = Transaction_Serializer(data=request.data)</pre></li>
                
                  <li onclick="toggle('pre140016011047616', 'post140016011047616')"><pre>        if serializer.is_valid():</pre></li>
                
                  <li onclick="toggle('pre140016011047616', 'post140016011047616')"><pre>            order_id = serializer.data.get(&#x27;razorpay_order_id&#x27;)</pre></li>
                
                  <li onclick="toggle('pre140016011047616', 'post140016011047616')"><pre>            clint_signature = client.utility.verify_payment_signature(serializer.data)</pre></li>
                
                  <li onclick="toggle('pre140016011047616', 'post140016011047616')"><pre>            if clint_signature is None:</pre></li>
                
                </ol>
              
              <ol start="120" class="context-line">
                <li onclick="toggle('pre140016011047616', 'post140016011047616')"><pre>                serializer.save()</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='121' class="post-context" id="post140016011047616">
                  
                  <li onclick="toggle('pre140016011047616', 'post140016011047616')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140016011047616', 'post140016011047616')"><pre>                order_qs = Order.objects.get(order_id=order_id)</pre></li>
                  
                  <li onclick="toggle('pre140016011047616', 'post140016011047616')"><pre>                order_qs.order_status = True</pre></li>
                  
                  <li onclick="toggle('pre140016011047616', 'post140016011047616')"><pre>                order_qs.save()</pre></li>
                  
                  <li onclick="toggle('pre140016011047616', 'post140016011047616')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140016011047616', 'post140016011047616')"><pre>                cart = Cart.objects.filter(user=self.request.user, ordered=False)</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140016011047616')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140016011047616">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>clint_signature</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>format</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>order_id</td>
                    <td class="code"><pre>&#x27;order_GA39rTlB6zY1es&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;rest_framework.request.Request object at 0x7f58049c0c70&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;product.api.Order_api.Transaction_views object at 0x7f58049c0790&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>serializer</td>
                    <td class="code"><pre>Transaction_Serializer(data={&#x27;razorpay_payment_id&#x27;: &#x27;pay_GA3A0Pn5SDSN8V&#x27;, &#x27;razorpay_order_id&#x27;: &#x27;order_GA39rTlB6zY1es&#x27;, &#x27;razorpay_signature&#x27;: &#x27;34d49bbe2e58502b7589da8c5ab600a70a24f02e6fb769b7db25802d1967f02c&#x27;}):
    razorpay_payment_id = CharField(max_length=1000)
    razorpay_order_id = CharField(max_length=1000)
    razorpay_signature = CharField(max_length=1000)</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code class="fname">/home/adminmeatfun/backend_roc/lib/python3.8/site-packages/rest_framework/serializers.py</code>, line 195, in save

          
            <div class="context" id="c140016011047552">
              
                <ol start="188" class="pre-context" id="pre140016011047552">
                
                  <li onclick="toggle('pre140016011047552', 'post140016011047552')"><pre>            &quot;If you need to access data before committing to the database then &quot;</pre></li>
                
                  <li onclick="toggle('pre140016011047552', 'post140016011047552')"><pre>            &quot;inspect &#x27;serializer.validated_data&#x27; instead. &quot;</pre></li>
                
                  <li onclick="toggle('pre140016011047552', 'post140016011047552')"><pre>            &quot;You can also pass additional keyword arguments to &#x27;save()&#x27; if you &quot;</pre></li>
                
                  <li onclick="toggle('pre140016011047552', 'post140016011047552')"><pre>            &quot;need to set extra attributes on the saved model instance. &quot;</pre></li>
                
                  <li onclick="toggle('pre140016011047552', 'post140016011047552')"><pre>            &quot;For example: &#x27;serializer.save(owner=request.user)&#x27;.&#x27;&quot;</pre></li>
                
                  <li onclick="toggle('pre140016011047552', 'post140016011047552')"><pre>        )</pre></li>
                
                  <li onclick="toggle('pre140016011047552', 'post140016011047552')"><pre></pre></li>
                
                </ol>
              
              <ol start="195" class="context-line">
                <li onclick="toggle('pre140016011047552', 'post140016011047552')"><pre>        assert not hasattr(self, &#x27;_data&#x27;), (</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='196' class="post-context" id="post140016011047552">
                  
                  <li onclick="toggle('pre140016011047552', 'post140016011047552')"><pre>            &quot;You cannot call `.save()` after accessing `serializer.data`.&quot;</pre></li>
                  
                  <li onclick="toggle('pre140016011047552', 'post140016011047552')"><pre>            &quot;If you need to access data before committing to the database then &quot;</pre></li>
                  
                  <li onclick="toggle('pre140016011047552', 'post140016011047552')"><pre>            &quot;inspect &#x27;serializer.validated_data&#x27; instead. &quot;</pre></li>
                  
                  <li onclick="toggle('pre140016011047552', 'post140016011047552')"><pre>        )</pre></li>
                  
                  <li onclick="toggle('pre140016011047552', 'post140016011047552')"><pre></pre></li>
                  
                  <li onclick="toggle('pre140016011047552', 'post140016011047552')"><pre>        validated_data = dict(</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '140016011047552')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v140016011047552">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>Transaction_Serializer(data={&#x27;razorpay_payment_id&#x27;: &#x27;pay_GA3A0Pn5SDSN8V&#x27;, &#x27;razorpay_order_id&#x27;: &#x27;order_GA39rTlB6zY1es&#x27;, &#x27;razorpay_signature&#x27;: &#x27;34d49bbe2e58502b7589da8c5ab600a70a24f02e6fb769b7db25802d1967f02c&#x27;}):
    razorpay_payment_id = CharField(max_length=1000)
    razorpay_order_id = CharField(max_length=1000)
    razorpay_signature = CharField(max_length=1000)</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
    </ul>
  </div>
  <form action="http://dpaste.com/" name="pasteform" id="pasteform" method="post">

  <div id="pastebinTraceback" class="pastebin">
    <input type="hidden" name="language" value="PythonConsole">
    <input type="hidden" name="title"
      value="AssertionError at /product/Transaction-Callback/">
    <input type="hidden" name="source" value="Django Dpaste Agent">
    <input type="hidden" name="poster" value="Django">
    <textarea name="content" id="traceback_area" cols="140" rows="25">
Environment:


Request Method: POST
Request URL: https://api.meat.fun/product/Transaction-Callback/

Django Version: 3.1
Python Version: 3.8.6
Installed Applications:
[&#x27;django.contrib.admin&#x27;,
 &#x27;django.contrib.auth&#x27;,
 &#x27;django.contrib.contenttypes&#x27;,
 &#x27;django.contrib.sessions&#x27;,
 &#x27;django.contrib.messages&#x27;,
 &#x27;django.contrib.staticfiles&#x27;,
 &#x27;django.contrib.sites&#x27;,
 &#x27;rest_framework&#x27;,
 &#x27;rest_framework.authtoken&#x27;,
 &#x27;rocapi&#x27;,
 &#x27;corsheaders&#x27;,
 &#x27;oauth2_provider&#x27;,
 &#x27;social_django&#x27;,
 &#x27;rest_framework_social_oauth2&#x27;,
 &#x27;storages&#x27;,
 &#x27;product&#x27;,
 &#x27;blog&#x27;]
Installed Middleware:
[&#x27;whitenoise.middleware.WhiteNoiseMiddleware&#x27;,
 &#x27;django.middleware.security.SecurityMiddleware&#x27;,
 &#x27;django.contrib.sessions.middleware.SessionMiddleware&#x27;,
 &#x27;corsheaders.middleware.CorsMiddleware&#x27;,
 &#x27;django.middleware.common.CommonMiddleware&#x27;,
 &#x27;django.middleware.csrf.CsrfViewMiddleware&#x27;,
 &#x27;django.contrib.auth.middleware.AuthenticationMiddleware&#x27;,
 &#x27;django.contrib.messages.middleware.MessageMiddleware&#x27;,
 &#x27;django.middleware.clickjacking.XFrameOptionsMiddleware&#x27;]



Traceback (most recent call last):
  File "/home/adminmeatfun/backend_roc/lib/python3.8/site-packages/django/core/handlers/exception.py", line 47, in inner
    response = get_response(request)
  File "/home/adminmeatfun/backend_roc/lib/python3.8/site-packages/django/core/handlers/base.py", line 179, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/home/adminmeatfun/backend_roc/lib/python3.8/site-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/home/adminmeatfun/backend_roc/lib/python3.8/site-packages/django/views/generic/base.py", line 73, in view
    return self.dispatch(request, *args, **kwargs)
  File "/home/adminmeatfun/backend_roc/lib/python3.8/site-packages/rest_framework/views.py", line 505, in dispatch
    response = self.handle_exception(exc)
  File "/home/adminmeatfun/backend_roc/lib/python3.8/site-packages/rest_framework/views.py", line 465, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/home/adminmeatfun/backend_roc/lib/python3.8/site-packages/rest_framework/views.py", line 476, in raise_uncaught_exception
    raise exc
  File "/home/adminmeatfun/backend_roc/lib/python3.8/site-packages/rest_framework/views.py", line 502, in dispatch
    response = handler(request, *args, **kwargs)
  File "/home/adminmeatfun/backend_roc/product/api/Order_api.py", line 120, in post
    serializer.save()
  File "/home/adminmeatfun/backend_roc/lib/python3.8/site-packages/rest_framework/serializers.py", line 195, in save
    assert not hasattr(self, &#x27;_data&#x27;), (

Exception Type: AssertionError at /product/Transaction-Callback/
Exception Value: You cannot call `.save()` after accessing `serializer.data`.If you need to access data before committing to the database then inspect &#x27;serializer.validated_data&#x27; instead. 
</textarea>
  <br><br>
  <input type="submit" value="Share this traceback on a public website">
  </div>
</form>
</div>



<div id="requestinfo">
  <h2>Request information</h2>


  
    <h3 id="user-info">USER</h3>
    <p>abhijeetjha1995@gmail.com</p>
  

  <h3 id="get-info">GET</h3>
  
    <p>No GET data</p>
  

  <h3 id="post-info">POST</h3>
  
    <p>No POST data</p>
  
  <h3 id="files-info">FILES</h3>
  
    <p>No FILES data</p>
  


  <h3 id="cookie-info">COOKIES</h3>
  
    <p>No cookie data</p>
  

  <h3 id="meta-info">META</h3>
  <table class="req">
    <thead>
      <tr>
        <th>Variable</th>
        <th>Value</th>
      </tr>
    </thead>
    <tbody>
      
        <tr>
          <td>CONTENT_LENGTH</td>
          <td class="code"><pre>&#x27;175&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CONTENT_TYPE</td>
          <td class="code"><pre>&#x27;application/json;charset=UTF-8&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_ACCEPT</td>
          <td class="code"><pre>&#x27;application/json, text/plain, */*&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_ACCEPT_ENCODING</td>
          <td class="code"><pre>&#x27;gzip, deflate, br&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_ACCEPT_LANGUAGE</td>
          <td class="code"><pre>&#x27;en-US,en;q=0.9,hi;q=0.8&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_AUTHORIZATION</td>
          <td class="code"><pre>(&#x27;JWT &#x27;
 &#x27;eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNjA3Njg3MjgwLCJqdGkiOiI2NDQ1MTI3ZjIzOTM0MTE0YjhlYmZhYzg4N2U5NGQxYiIsInVzZXJfaWQiOjd9.tFPO3Pn7RC9ouIB-E7gg-w-yfV_U2uFtK227cwndPso&#x27;)</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_CONNECTION</td>
          <td class="code"><pre>&#x27;close&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_HOST</td>
          <td class="code"><pre>&#x27;api.meat.fun&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_ORIGIN</td>
          <td class="code"><pre>&#x27;http://localhost:3000&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_REFERER</td>
          <td class="code"><pre>&#x27;http://localhost:3000/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_SEC_FETCH_DEST</td>
          <td class="code"><pre>&#x27;empty&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_SEC_FETCH_MODE</td>
          <td class="code"><pre>&#x27;cors&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_SEC_FETCH_SITE</td>
          <td class="code"><pre>&#x27;cross-site&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_USER_AGENT</td>
          <td class="code"><pre>(&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like &#x27;
 &#x27;Gecko) Chrome/86.0.4240.198 Safari/537.36&#x27;)</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_X_FORWARDED_FOR</td>
          <td class="code"><pre>&#x27;180.188.224.235&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_X_FORWARDED_PROTO</td>
          <td class="code"><pre>&#x27;https&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PATH_INFO</td>
          <td class="code"><pre>&#x27;/product/Transaction-Callback/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>QUERY_STRING</td>
          <td class="code"><pre>&#x27;&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>RAW_URI</td>
          <td class="code"><pre>&#x27;/product/Transaction-Callback/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>REMOTE_ADDR</td>
          <td class="code"><pre>&#x27;&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>REQUEST_METHOD</td>
          <td class="code"><pre>&#x27;POST&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SCRIPT_NAME</td>
          <td class="code"><pre>&#x27;&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SERVER_NAME</td>
          <td class="code"><pre>&#x27;api.meat.fun&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SERVER_PORT</td>
          <td class="code"><pre>&#x27;443&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SERVER_PROTOCOL</td>
          <td class="code"><pre>&#x27;HTTP/1.0&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SERVER_SOFTWARE</td>
          <td class="code"><pre>&#x27;gunicorn/20.0.4&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>gunicorn.socket</td>
          <td class="code"><pre>&lt;socket.socket fd=9, family=AddressFamily.AF_UNIX, type=SocketKind.SOCK_STREAM, proto=0, laddr=/home/adminmeatfun/backend_roc/run/gunicorn.sock&gt;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.errors</td>
          <td class="code"><pre>&lt;gunicorn.http.wsgi.WSGIErrorsWrapper object at 0x7f58049ca610&gt;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.file_wrapper</td>
          <td class="code"><pre>&lt;class &#x27;gunicorn.http.wsgi.FileWrapper&#x27;&gt;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.input</td>
          <td class="code"><pre>&lt;gunicorn.http.body.Body object at 0x7f5804976040&gt;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.input_terminated</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.multiprocess</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.multithread</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.run_once</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.url_scheme</td>
          <td class="code"><pre>&#x27;https&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.version</td>
          <td class="code"><pre>(1, 0)</pre></td>
        </tr>
      
    </tbody>
  </table>


  <h3 id="settings-info">Settings</h3>
  <h4>Using settings module <code>backend_roc.settings.development</code></h4>
  <table class="req">
    <thead>
      <tr>
        <th>Setting</th>
        <th>Value</th>
      </tr>
    </thead>
    <tbody>
      
        <tr>
          <td>ABSOLUTE_URL_OVERRIDES</td>
          <td class="code"><pre>{}</pre></td>
        </tr>
      
        <tr>
          <td>ADMINS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>ALLOWED_HOSTS</td>
          <td class="code"><pre>[&#x27;*&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>APPEND_SLASH</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>AUTHENTICATION_BACKENDS</td>
          <td class="code"><pre>[&#x27;social_core.backends.facebook.FacebookAppOAuth2&#x27;,
 &#x27;social_core.backends.facebook.FacebookOAuth2&#x27;,
 &#x27;social_core.backends.google.GoogleOAuth2&#x27;,
 &#x27;social_core.backends.google.GoogleOAuth&#x27;,
 &#x27;rest_framework_social_oauth2.backends.DjangoOAuth2&#x27;,
 &#x27;django.contrib.auth.backends.ModelBackend&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>AUTH_PASSWORD_VALIDATORS</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>AUTH_USER_MODEL</td>
          <td class="code"><pre>&#x27;auth.User&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>BASE_DIR</td>
          <td class="code"><pre>PosixPath(&#x27;/home/adminmeatfun/backend_roc/backend_roc&#x27;)</pre></td>
        </tr>
      
        <tr>
          <td>CACHES</td>
          <td class="code"><pre>{&#x27;default&#x27;: {&#x27;BACKEND&#x27;: &#x27;django.core.cache.backends.locmem.LocMemCache&#x27;}}</pre></td>
        </tr>
      
        <tr>
          <td>CACHE_MIDDLEWARE_ALIAS</td>
          <td class="code"><pre>&#x27;default&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CACHE_MIDDLEWARE_KEY_PREFIX</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CACHE_MIDDLEWARE_SECONDS</td>
          <td class="code"><pre>600</pre></td>
        </tr>
      
        <tr>
          <td>CORS_ORIGIN_ALLOW_ALL</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>CORS_ORIGIN_WHITELIST</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_AGE</td>
          <td class="code"><pre>31449600</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_DOMAIN</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_HTTPONLY</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_NAME</td>
          <td class="code"><pre>&#x27;csrftoken&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_PATH</td>
          <td class="code"><pre>&#x27;/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_SAMESITE</td>
          <td class="code"><pre>&#x27;Lax&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_SECURE</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_FAILURE_VIEW</td>
          <td class="code"><pre>&#x27;django.views.csrf.csrf_failure&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_HEADER_NAME</td>
          <td class="code"><pre>&#x27;HTTP_X_CSRFTOKEN&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_TRUSTED_ORIGINS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_USE_SESSIONS</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>DATABASES</td>
          <td class="code"><pre>{&#x27;default&#x27;: {&#x27;ATOMIC_REQUESTS&#x27;: False,
             &#x27;AUTOCOMMIT&#x27;: True,
             &#x27;CONN_MAX_AGE&#x27;: 0,
             &#x27;ENGINE&#x27;: &#x27;django.db.backends.mysql&#x27;,
             &#x27;HOST&#x27;: &#x27;167.86.124.9&#x27;,
             &#x27;NAME&#x27;: &#x27;backend_roc&#x27;,
             &#x27;OPTIONS&#x27;: {},
             &#x27;PASSWORD&#x27;: &#x27;********************&#x27;,
             &#x27;PORT&#x27;: &#x27;3306&#x27;,
             &#x27;TEST&#x27;: {&#x27;CHARSET&#x27;: None,
                      &#x27;COLLATION&#x27;: None,
                      &#x27;MIGRATE&#x27;: True,
                      &#x27;MIRROR&#x27;: None,
                      &#x27;NAME&#x27;: None},
             &#x27;TIME_ZONE&#x27;: None,
             &#x27;USER&#x27;: &#x27;root&#x27;}}</pre></td>
        </tr>
      
        <tr>
          <td>DATABASE_ROUTERS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>DATA_UPLOAD_MAX_MEMORY_SIZE</td>
          <td class="code"><pre>2621440</pre></td>
        </tr>
      
        <tr>
          <td>DATA_UPLOAD_MAX_NUMBER_FIELDS</td>
          <td class="code"><pre>1000</pre></td>
        </tr>
      
        <tr>
          <td>DATETIME_FORMAT</td>
          <td class="code"><pre>&#x27;N j, Y, P&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DATETIME_INPUT_FORMATS</td>
          <td class="code"><pre>[&#x27;%Y-%m-%d %H:%M:%S&#x27;,
 &#x27;%Y-%m-%d %H:%M:%S.%f&#x27;,
 &#x27;%Y-%m-%d %H:%M&#x27;,
 &#x27;%m/%d/%Y %H:%M:%S&#x27;,
 &#x27;%m/%d/%Y %H:%M:%S.%f&#x27;,
 &#x27;%m/%d/%Y %H:%M&#x27;,
 &#x27;%m/%d/%y %H:%M:%S&#x27;,
 &#x27;%m/%d/%y %H:%M:%S.%f&#x27;,
 &#x27;%m/%d/%y %H:%M&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>DATE_FORMAT</td>
          <td class="code"><pre>&#x27;N j, Y&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DATE_INPUT_FORMATS</td>
          <td class="code"><pre>[&#x27;%Y-%m-%d&#x27;,
 &#x27;%m/%d/%Y&#x27;,
 &#x27;%m/%d/%y&#x27;,
 &#x27;%b %d %Y&#x27;,
 &#x27;%b %d, %Y&#x27;,
 &#x27;%d %b %Y&#x27;,
 &#x27;%d %b, %Y&#x27;,
 &#x27;%B %d %Y&#x27;,
 &#x27;%B %d, %Y&#x27;,
 &#x27;%d %B %Y&#x27;,
 &#x27;%d %B, %Y&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>DEBUG</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>DEBUG_PROPAGATE_EXCEPTIONS</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>DECIMAL_SEPARATOR</td>
          <td class="code"><pre>&#x27;.&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_CHARSET</td>
          <td class="code"><pre>&#x27;utf-8&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_EXCEPTION_REPORTER</td>
          <td class="code"><pre>&#x27;django.views.debug.ExceptionReporter&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_EXCEPTION_REPORTER_FILTER</td>
          <td class="code"><pre>&#x27;django.views.debug.SafeExceptionReporterFilter&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_FILE_STORAGE</td>
          <td class="code"><pre>&#x27;django.core.files.storage.FileSystemStorage&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_FROM_EMAIL</td>
          <td class="code"><pre>&#x27;webmaster@localhost&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_HASHING_ALGORITHM</td>
          <td class="code"><pre>&#x27;sha256&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_INDEX_TABLESPACE</td>
          <td class="code"><pre>&#x27;&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_TABLESPACE</td>
          <td class="code"><pre>&#x27;&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DISALLOWED_USER_AGENTS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_BACKEND</td>
          <td class="code"><pre>&#x27;django.core.mail.backends.smtp.EmailBackend&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_HOST</td>
          <td class="code"><pre>&#x27;localhost&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_HOST_PASSWORD</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_HOST_USER</td>
          <td class="code"><pre>&#x27;&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_PORT</td>
          <td class="code"><pre>25</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_SSL_CERTFILE</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_SSL_KEYFILE</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_SUBJECT_PREFIX</td>
          <td class="code"><pre>&#x27;[Django] &#x27;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_TIMEOUT</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_USE_LOCALTIME</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_USE_SSL</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_USE_TLS</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_DIRECTORY_PERMISSIONS</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_HANDLERS</td>
          <td class="code"><pre>[&#x27;django.core.files.uploadhandler.MemoryFileUploadHandler&#x27;,
 &#x27;django.core.files.uploadhandler.TemporaryFileUploadHandler&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_MAX_MEMORY_SIZE</td>
          <td class="code"><pre>2621440</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_PERMISSIONS</td>
          <td class="code"><pre>420</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_TEMP_DIR</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>FIRST_DAY_OF_WEEK</td>
          <td class="code"><pre>0</pre></td>
        </tr>
      
        <tr>
          <td>FIXTURE_DIRS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>FORCE_SCRIPT_NAME</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>FORMAT_MODULE_PATH</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>FORM_RENDERER</td>
          <td class="code"><pre>&#x27;django.forms.renderers.DjangoTemplates&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>IGNORABLE_404_URLS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>INSTALLED_APPS</td>
          <td class="code"><pre>[&#x27;django.contrib.admin&#x27;,
 &#x27;django.contrib.auth&#x27;,
 &#x27;django.contrib.contenttypes&#x27;,
 &#x27;django.contrib.sessions&#x27;,
 &#x27;django.contrib.messages&#x27;,
 &#x27;django.contrib.staticfiles&#x27;,
 &#x27;django.contrib.sites&#x27;,
 &#x27;rest_framework&#x27;,
 &#x27;rest_framework.authtoken&#x27;,
 &#x27;rocapi&#x27;,
 &#x27;corsheaders&#x27;,
 &#x27;oauth2_provider&#x27;,
 &#x27;social_django&#x27;,
 &#x27;rest_framework_social_oauth2&#x27;,
 &#x27;storages&#x27;,
 &#x27;product&#x27;,
 &#x27;blog&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>INTERNAL_IPS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGES</td>
          <td class="code"><pre>[(&#x27;af&#x27;, &#x27;Afrikaans&#x27;),
 (&#x27;ar&#x27;, &#x27;Arabic&#x27;),
 (&#x27;ar-dz&#x27;, &#x27;Algerian Arabic&#x27;),
 (&#x27;ast&#x27;, &#x27;Asturian&#x27;),
 (&#x27;az&#x27;, &#x27;Azerbaijani&#x27;),
 (&#x27;bg&#x27;, &#x27;Bulgarian&#x27;),
 (&#x27;be&#x27;, &#x27;Belarusian&#x27;),
 (&#x27;bn&#x27;, &#x27;Bengali&#x27;),
 (&#x27;br&#x27;, &#x27;Breton&#x27;),
 (&#x27;bs&#x27;, &#x27;Bosnian&#x27;),
 (&#x27;ca&#x27;, &#x27;Catalan&#x27;),
 (&#x27;cs&#x27;, &#x27;Czech&#x27;),
 (&#x27;cy&#x27;, &#x27;Welsh&#x27;),
 (&#x27;da&#x27;, &#x27;Danish&#x27;),
 (&#x27;de&#x27;, &#x27;German&#x27;),
 (&#x27;dsb&#x27;, &#x27;Lower Sorbian&#x27;),
 (&#x27;el&#x27;, &#x27;Greek&#x27;),
 (&#x27;en&#x27;, &#x27;English&#x27;),
 (&#x27;en-au&#x27;, &#x27;Australian English&#x27;),
 (&#x27;en-gb&#x27;, &#x27;British English&#x27;),
 (&#x27;eo&#x27;, &#x27;Esperanto&#x27;),
 (&#x27;es&#x27;, &#x27;Spanish&#x27;),
 (&#x27;es-ar&#x27;, &#x27;Argentinian Spanish&#x27;),
 (&#x27;es-co&#x27;, &#x27;Colombian Spanish&#x27;),
 (&#x27;es-mx&#x27;, &#x27;Mexican Spanish&#x27;),
 (&#x27;es-ni&#x27;, &#x27;Nicaraguan Spanish&#x27;),
 (&#x27;es-ve&#x27;, &#x27;Venezuelan Spanish&#x27;),
 (&#x27;et&#x27;, &#x27;Estonian&#x27;),
 (&#x27;eu&#x27;, &#x27;Basque&#x27;),
 (&#x27;fa&#x27;, &#x27;Persian&#x27;),
 (&#x27;fi&#x27;, &#x27;Finnish&#x27;),
 (&#x27;fr&#x27;, &#x27;French&#x27;),
 (&#x27;fy&#x27;, &#x27;Frisian&#x27;),
 (&#x27;ga&#x27;, &#x27;Irish&#x27;),
 (&#x27;gd&#x27;, &#x27;Scottish Gaelic&#x27;),
 (&#x27;gl&#x27;, &#x27;Galician&#x27;),
 (&#x27;he&#x27;, &#x27;Hebrew&#x27;),
 (&#x27;hi&#x27;, &#x27;Hindi&#x27;),
 (&#x27;hr&#x27;, &#x27;Croatian&#x27;),
 (&#x27;hsb&#x27;, &#x27;Upper Sorbian&#x27;),
 (&#x27;hu&#x27;, &#x27;Hungarian&#x27;),
 (&#x27;hy&#x27;, &#x27;Armenian&#x27;),
 (&#x27;ia&#x27;, &#x27;Interlingua&#x27;),
 (&#x27;id&#x27;, &#x27;Indonesian&#x27;),
 (&#x27;ig&#x27;, &#x27;Igbo&#x27;),
 (&#x27;io&#x27;, &#x27;Ido&#x27;),
 (&#x27;is&#x27;, &#x27;Icelandic&#x27;),
 (&#x27;it&#x27;, &#x27;Italian&#x27;),
 (&#x27;ja&#x27;, &#x27;Japanese&#x27;),
 (&#x27;ka&#x27;, &#x27;Georgian&#x27;),
 (&#x27;kab&#x27;, &#x27;Kabyle&#x27;),
 (&#x27;kk&#x27;, &#x27;Kazakh&#x27;),
 (&#x27;km&#x27;, &#x27;Khmer&#x27;),
 (&#x27;kn&#x27;, &#x27;Kannada&#x27;),
 (&#x27;ko&#x27;, &#x27;Korean&#x27;),
 (&#x27;ky&#x27;, &#x27;Kyrgyz&#x27;),
 (&#x27;lb&#x27;, &#x27;Luxembourgish&#x27;),
 (&#x27;lt&#x27;, &#x27;Lithuanian&#x27;),
 (&#x27;lv&#x27;, &#x27;Latvian&#x27;),
 (&#x27;mk&#x27;, &#x27;Macedonian&#x27;),
 (&#x27;ml&#x27;, &#x27;Malayalam&#x27;),
 (&#x27;mn&#x27;, &#x27;Mongolian&#x27;),
 (&#x27;mr&#x27;, &#x27;Marathi&#x27;),
 (&#x27;my&#x27;, &#x27;Burmese&#x27;),
 (&#x27;nb&#x27;, &#x27;Norwegian BokmÃ¥l&#x27;),
 (&#x27;ne&#x27;, &#x27;Nepali&#x27;),
 (&#x27;nl&#x27;, &#x27;Dutch&#x27;),
 (&#x27;nn&#x27;, &#x27;Norwegian Nynorsk&#x27;),
 (&#x27;os&#x27;, &#x27;Ossetic&#x27;),
 (&#x27;pa&#x27;, &#x27;Punjabi&#x27;),
 (&#x27;pl&#x27;, &#x27;Polish&#x27;),
 (&#x27;pt&#x27;, &#x27;Portuguese&#x27;),
 (&#x27;pt-br&#x27;, &#x27;Brazilian Portuguese&#x27;),
 (&#x27;ro&#x27;, &#x27;Romanian&#x27;),
 (&#x27;ru&#x27;, &#x27;Russian&#x27;),
 (&#x27;sk&#x27;, &#x27;Slovak&#x27;),
 (&#x27;sl&#x27;, &#x27;Slovenian&#x27;),
 (&#x27;sq&#x27;, &#x27;Albanian&#x27;),
 (&#x27;sr&#x27;, &#x27;Serbian&#x27;),
 (&#x27;sr-latn&#x27;, &#x27;Serbian Latin&#x27;),
 (&#x27;sv&#x27;, &#x27;Swedish&#x27;),
 (&#x27;sw&#x27;, &#x27;Swahili&#x27;),
 (&#x27;ta&#x27;, &#x27;Tamil&#x27;),
 (&#x27;te&#x27;, &#x27;Telugu&#x27;),
 (&#x27;tg&#x27;, &#x27;Tajik&#x27;),
 (&#x27;th&#x27;, &#x27;Thai&#x27;),
 (&#x27;tk&#x27;, &#x27;Turkmen&#x27;),
 (&#x27;tr&#x27;, &#x27;Turkish&#x27;),
 (&#x27;tt&#x27;, &#x27;Tatar&#x27;),
 (&#x27;udm&#x27;, &#x27;Udmurt&#x27;),
 (&#x27;uk&#x27;, &#x27;Ukrainian&#x27;),
 (&#x27;ur&#x27;, &#x27;Urdu&#x27;),
 (&#x27;uz&#x27;, &#x27;Uzbek&#x27;),
 (&#x27;vi&#x27;, &#x27;Vietnamese&#x27;),
 (&#x27;zh-hans&#x27;, &#x27;Simplified Chinese&#x27;),
 (&#x27;zh-hant&#x27;, &#x27;Traditional Chinese&#x27;)]</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGES_BIDI</td>
          <td class="code"><pre>[&#x27;he&#x27;, &#x27;ar&#x27;, &#x27;ar-dz&#x27;, &#x27;fa&#x27;, &#x27;ur&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_CODE</td>
          <td class="code"><pre>&#x27;en-us&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_AGE</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_DOMAIN</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_HTTPONLY</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_NAME</td>
          <td class="code"><pre>&#x27;django_language&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_PATH</td>
          <td class="code"><pre>&#x27;/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_SAMESITE</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_SECURE</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>LOCALE_PATHS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>LOGGING</td>
          <td class="code"><pre>{}</pre></td>
        </tr>
      
        <tr>
          <td>LOGGING_CONFIG</td>
          <td class="code"><pre>&#x27;logging.config.dictConfig&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LOGIN_REDIRECT_URL</td>
          <td class="code"><pre>&#x27;/accounts/profile/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LOGIN_URL</td>
          <td class="code"><pre>&#x27;/accounts/login/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LOGOUT_REDIRECT_URL</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>MANAGERS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>MEDIA_ROOT</td>
          <td class="code"><pre>&#x27;/home/adminmeatfun/backend_roc/backend_roc/media&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>MEDIA_URL</td>
          <td class="code"><pre>&#x27;/media/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>MESSAGE_STORAGE</td>
          <td class="code"><pre>&#x27;django.contrib.messages.storage.fallback.FallbackStorage&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>MIDDLEWARE</td>
          <td class="code"><pre>[&#x27;whitenoise.middleware.WhiteNoiseMiddleware&#x27;,
 &#x27;django.middleware.security.SecurityMiddleware&#x27;,
 &#x27;django.contrib.sessions.middleware.SessionMiddleware&#x27;,
 &#x27;corsheaders.middleware.CorsMiddleware&#x27;,
 &#x27;django.middleware.common.CommonMiddleware&#x27;,
 &#x27;django.middleware.csrf.CsrfViewMiddleware&#x27;,
 &#x27;django.contrib.auth.middleware.AuthenticationMiddleware&#x27;,
 &#x27;django.contrib.messages.middleware.MessageMiddleware&#x27;,
 &#x27;django.middleware.clickjacking.XFrameOptionsMiddleware&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>MIGRATION_MODULES</td>
          <td class="code"><pre>{}</pre></td>
        </tr>
      
        <tr>
          <td>MONTH_DAY_FORMAT</td>
          <td class="code"><pre>&#x27;F j&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>NUMBER_GROUPING</td>
          <td class="code"><pre>0</pre></td>
        </tr>
      
        <tr>
          <td>PASSWORD_HASHERS</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PASSWORD_RESET_TIMEOUT</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PASSWORD_RESET_TIMEOUT_DAYS</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PREPEND_WWW</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>REST_FRAMEWORK</td>
          <td class="code"><pre>{&#x27;DEFAULT_AUTHENTICATION_CLASSES&#x27;: (&#x27;rest_framework_simplejwt.authentication.JWTAuthentication&#x27;,
                                    &#x27;oauth2_provider.contrib.rest_framework.OAuth2Authentication&#x27;,
                                    &#x27;rest_framework_social_oauth2.authentication.SocialAuthentication&#x27;),
 &#x27;DEFAULT_FILTER_BACKENDS&#x27;: [&#x27;django_filters.rest_framework.DjangoFilterBackend&#x27;],
 &#x27;DEFAULT_PERMISSION_CLASSES&#x27;: (&#x27;rest_framework.permissions.IsAuthenticated&#x27;,),
 &#x27;DEFAULT_SCHEMA_CLASS&#x27;: &#x27;rest_framework.schemas.coreapi.AutoSchema&#x27;,
 &#x27;EXCEPTION_HANDLER&#x27;: &#x27;backend_roc.utils.exceptions.custom_exception_handler&#x27;}</pre></td>
        </tr>
      
        <tr>
          <td>ROOT_URLCONF</td>
          <td class="code"><pre>&#x27;backend_roc.urls&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SECRET_KEY</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_BROWSER_XSS_FILTER</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_CONTENT_TYPE_NOSNIFF</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_HSTS_INCLUDE_SUBDOMAINS</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_HSTS_PRELOAD</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_HSTS_SECONDS</td>
          <td class="code"><pre>0</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_PROXY_SSL_HEADER</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_REDIRECT_EXEMPT</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_REFERRER_POLICY</td>
          <td class="code"><pre>&#x27;same-origin&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_SSL_HOST</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_SSL_REDIRECT</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SERVER_EMAIL</td>
          <td class="code"><pre>&#x27;root@localhost&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_CACHE_ALIAS</td>
          <td class="code"><pre>&#x27;default&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_AGE</td>
          <td class="code"><pre>1209600</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_DOMAIN</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_HTTPONLY</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_NAME</td>
          <td class="code"><pre>&#x27;sessionid&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_PATH</td>
          <td class="code"><pre>&#x27;/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_SAMESITE</td>
          <td class="code"><pre>&#x27;Lax&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_SECURE</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_ENGINE</td>
          <td class="code"><pre>&#x27;django.contrib.sessions.backends.db&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_EXPIRE_AT_BROWSER_CLOSE</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_FILE_PATH</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_SAVE_EVERY_REQUEST</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_SERIALIZER</td>
          <td class="code"><pre>&#x27;django.contrib.sessions.serializers.JSONSerializer&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SETTINGS_MODULE</td>
          <td class="code"><pre>&#x27;backend_roc.settings.development&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SHORT_DATETIME_FORMAT</td>
          <td class="code"><pre>&#x27;m/d/Y P&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SHORT_DATE_FORMAT</td>
          <td class="code"><pre>&#x27;m/d/Y&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SIGNING_BACKEND</td>
          <td class="code"><pre>&#x27;django.core.signing.TimestampSigner&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SILENCED_SYSTEM_CHECKS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>SIMPLE_JWT</td>
          <td class="code"><pre>{&#x27;ACCESS_TOKEN_LIFETIME&#x27;: &#x27;********************&#x27;,
 &#x27;ALGORITHM&#x27;: &#x27;HS256&#x27;,
 &#x27;AUTH_HEADER_TYPES&#x27;: (&#x27;JWT&#x27;,),
 &#x27;AUTH_TOKEN_CLASSES&#x27;: &#x27;********************&#x27;,
 &#x27;BLACKLIST_AFTER_ROTATION&#x27;: True,
 &#x27;REFRESH_TOKEN_LIFETIME&#x27;: &#x27;********************&#x27;,
 &#x27;ROTATE_REFRESH_TOKENS&#x27;: &#x27;********************&#x27;,
 &#x27;SIGNING_KEY&#x27;: &#x27;********************&#x27;,
 &#x27;SLIDING_TOKEN_LIFETIME&#x27;: &#x27;********************&#x27;,
 &#x27;SLIDING_TOKEN_REFRESH_EXP_CLAIM&#x27;: &#x27;********************&#x27;,
 &#x27;SLIDING_TOKEN_REFRESH_LIFETIME&#x27;: &#x27;********************&#x27;,
 &#x27;TOKEN_TYPE_CLAIM&#x27;: &#x27;********************&#x27;,
 &#x27;USER_ID_CLAIM&#x27;: &#x27;user_id&#x27;,
 &#x27;USER_ID_FIELD&#x27;: &#x27;id&#x27;,
 &#x27;VERIFYING_KEY&#x27;: &#x27;********************&#x27;}</pre></td>
        </tr>
      
        <tr>
          <td>SITE_ID</td>
          <td class="code"><pre>1</pre></td>
        </tr>
      
        <tr>
          <td>SOCIAL_AUTH_FACEBOOK_KEY</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SOCIAL_AUTH_FACEBOOK_PROFILE_EXTRA_PARAMS</td>
          <td class="code"><pre>{&#x27;fields&#x27;: &#x27;id, name, email&#x27;}</pre></td>
        </tr>
      
        <tr>
          <td>SOCIAL_AUTH_FACEBOOK_SCOPE</td>
          <td class="code"><pre>[&#x27;email&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>SOCIAL_AUTH_FACEBOOK_SECRET</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SOCIAL_AUTH_GOOGLE_OAUTH2_KEY</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SOCIAL_AUTH_GOOGLE_OAUTH2_SCOPE</td>
          <td class="code"><pre>[&#x27;email&#x27;, &#x27;profile&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>STATICFILES_DIRS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>STATICFILES_FINDERS</td>
          <td class="code"><pre>[&#x27;django.contrib.staticfiles.finders.FileSystemFinder&#x27;,
 &#x27;django.contrib.staticfiles.finders.AppDirectoriesFinder&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>STATICFILES_STORAGE</td>
          <td class="code"><pre>&#x27;whitenoise.storage.CompressedManifestStaticFilesStorage&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>STATIC_ROOT</td>
          <td class="code"><pre>&#x27;/home/adminmeatfun/backend_roc/backend_roc/static&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>STATIC_URL</td>
          <td class="code"><pre>&#x27;/static/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>TEMPLATES</td>
          <td class="code"><pre>[{&#x27;APP_DIRS&#x27;: True,
  &#x27;BACKEND&#x27;: &#x27;django.template.backends.django.DjangoTemplates&#x27;,
  &#x27;DIRS&#x27;: [&#x27;/home/adminmeatfun/backend_roc/backend_roc/templates&#x27;],
  &#x27;OPTIONS&#x27;: {&#x27;context_processors&#x27;: [&#x27;django.template.context_processors.debug&#x27;,
                                     &#x27;django.template.context_processors.request&#x27;,
                                     &#x27;django.contrib.auth.context_processors.auth&#x27;,
                                     &#x27;django.contrib.messages.context_processors.messages&#x27;,
                                     &#x27;social_django.context_processors.backends&#x27;,
                                     &#x27;social_django.context_processors.login_redirect&#x27;]}}]</pre></td>
        </tr>
      
        <tr>
          <td>TEMPLATE_CONTEXT_PROCESSORS</td>
          <td class="code"><pre>[&#x27;social_django.context_processors.backends&#x27;,
 &#x27;social_django.context_processors.login_redirect&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>TESTING</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>TEST_NON_SERIALIZED_APPS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>TEST_RUNNER</td>
          <td class="code"><pre>&#x27;django.test.runner.DiscoverRunner&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>THOUSAND_SEPARATOR</td>
          <td class="code"><pre>&#x27;,&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>TIME_FORMAT</td>
          <td class="code"><pre>&#x27;P&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>TIME_INPUT_FORMATS</td>
          <td class="code"><pre>[&#x27;%H:%M:%S&#x27;, &#x27;%H:%M:%S.%f&#x27;, &#x27;%H:%M&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>TIME_ZONE</td>
          <td class="code"><pre>&#x27;UTC&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>USE_I18N</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>USE_L10N</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>USE_THOUSAND_SEPARATOR</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>USE_TZ</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>USE_X_FORWARDED_HOST</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>USE_X_FORWARDED_PORT</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>WSGI_APPLICATION</td>
          <td class="code"><pre>&#x27;backend_roc.wsgi.application&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>X_FRAME_OPTIONS</td>
          <td class="code"><pre>&#x27;DENY&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>YEAR_MONTH_FORMAT</td>
          <td class="code"><pre>&#x27;F Y&#x27;</pre></td>
        </tr>
      
    </tbody>
  </table>

</div>

  <div id="explanation">
    <p>
      You're seeing this error because you have <code>DEBUG = True</code> in your
      Django settings file. Change that to <code>False</code>, and Django will
      display a standard page generated by the handler for this status code.
    </p>
  </div>

</body>
</html>
